# Comprehensive example showing different keystore sources
# This workflow demonstrates various ways to handle keystores
name: Multiple Keystore Sources Example

on:
  workflow_dispatch:
    inputs:
      keystore_method:
        description: 'Keystore source method'
        required: true
        default: 'base64'
        type: choice
        options:
          - base64
          - file_path
          - cdn

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.build.outputs.artifact-name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build AAB
        id: build
        run: |
          ./gradlew bundleRelease
          echo "artifact-name=app-release-${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build.outputs.artifact-name }}
          path: app/build/outputs/bundle/release/app-release.aab
          retention-days: 1

  # Deploy with base64 keystore (most common)
  deploy-base64:
    needs: build
    runs-on: ubuntu-latest
    if: github.event.inputs.keystore_method == 'base64'
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.artifact-name }}
          path: ./

      - name: Deploy with Base64 Keystore
        uses: indusappstore/appstore-release@v1
        with:
          operation_mode: 'deploy_only'
          file_path: './app-release.aab'
          file_type: 'aab'
          api_token: ${{ secrets.INDUS_APP_STORE_API_TOKEN }}
          
          # Auto-detect package name
          auto_detect_package: 'true'
          
          # Base64 encoded keystore (recommended)
          keystore_source: 'base64'
          keystore_base64: ${{ secrets.KEYSTORE_BASE64 }}
          keystore_password: ${{ secrets.KEYSTORE_PASSWORD }}
          key_alias: ${{ secrets.KEY_ALIAS }}
          key_password: ${{ secrets.KEY_PASSWORD }}
          keystore_validation: 'true'

  # Deploy with file path keystore
  deploy-file:
    needs: build
    runs-on: ubuntu-latest
    if: github.event.inputs.keystore_method == 'file_path'
    steps:
      - name: Checkout code (needed for keystore file)
        uses: actions/checkout@v4
      
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.artifact-name }}
          path: ./

      - name: Deploy with File Path Keystore
        uses: indusappstore/appstore-release@v1
        with:
          operation_mode: 'deploy_only'
          file_path: './app-release.aab'
          file_type: 'aab'
          api_token: ${{ secrets.INDUS_APP_STORE_API_TOKEN }}
          
          # Auto-detect package name
          auto_detect_package: 'true'
          
          # File path keystore (for repos with committed encrypted keystores)
          keystore_source: 'file_path'
          keystore_path: './keystore/release.keystore'
          keystore_password: ${{ secrets.KEYSTORE_PASSWORD }}
          key_alias: ${{ secrets.KEY_ALIAS }}
          key_password: ${{ secrets.KEY_PASSWORD }}
          keystore_validation: 'true'

  # Deploy with CDN keystore
  deploy-cdn:
    needs: build
    runs-on: ubuntu-latest
    if: github.event.inputs.keystore_method == 'cdn'
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.artifact-name }}
          path: ./

      - name: Deploy with CDN Keystore
        uses: indusappstore/appstore-release@v1
        with:
          operation_mode: 'deploy_only'
          file_path: './app-release.aab'
          file_type: 'aab'
          api_token: ${{ secrets.INDUS_APP_STORE_API_TOKEN }}
          
          # Auto-detect package name
          auto_detect_package: 'true'
          
          # CDN keystore (for keystores hosted on secure CDNs)
          keystore_source: 'cdn'
          keystore_cdn_url: ${{ secrets.KEYSTORE_CDN_URL }}
          keystore_cdn_auth_header: ${{ secrets.CDN_AUTH_TOKEN }}
          keystore_password: ${{ secrets.KEYSTORE_PASSWORD }}
          key_alias: ${{ secrets.KEY_ALIAS }}
          key_password: ${{ secrets.KEY_PASSWORD }}
          keystore_validation: 'true'
